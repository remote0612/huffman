# -*- coding: utf-8 -*-
"""W11_확인문제_Huffman_student.ipynb의 사본

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lWtZjxQFCJfA6SFQmkZHpn8GODnAuv22

# 다음 표의 캐릭터와 빈도수로 얻어진 값을 호프만 코드로 만드는 파이썬 클래스 HuffmanNode 를 작성하라. 아래 클래스 틀을 활용하라.
"""

class HuffmanNode:
    def __init__(self, frequency, symbol=None, left=None, right=None):
        self.frequency = frequency
        self.symbol = symbol
        self.left = left
        self.right = right

    # Helper method to check if a node is a leaf (has no children)
    def is_leaf(self):
        return self.left is None and self.right is None


class HuffmanCoding:
    def __init__(self, frequencies): # frequencies -> dict, with char: freq
        # Initialize with a list of Huffman nodes for each character
        self.nodes = [HuffmanNode(freq, symbol) for symbol, freq in frequencies.items()]
        self.d={}

    def small_nodes(self):
      self.nodes=sorted(self.nodes, key=lambda x :x.frequency)
      return self.nodes[0], self.nodes[1]

    def find_root_node(self):
        while len(self.nodes)>1:
          l, r =self.small_nodes()
          new_node=HuffmanNode(l.frequency+r.frequency ,left=l, right=r)
          self.nodes.append(new_node)
          self.nodes.remove(l)
          self.nodes.remove(r)
        return self.nodes[0]

    def get_codes(self, node=None, string=''):
        if node==None:
          node= self.find_root_node()

        if node.is_leaf():
          self.d[node.symbol]=string


        if node.left:
          self.get_codes(node.left, string+'0')
        if node.right:
          self.get_codes(node.right, string+'1')

        return self.d
    # 자유롭게 작성


# Example usage
if __name__ == "__main__":
    # Input frequencies as per Table 9.1.2
    frequencies = {
        '!': 2,
        '@': 3,
        '#': 7,
        '$': 8,
        '%': 12
    }

    # Create HuffmanCoding instance and get the codes
    huffman_coding = HuffmanCoding(frequencies)
    codes = huffman_coding.get_codes()

    # Output the resulting Huffman codes
    print("Huffman Codes for the given frequencies:")
    for symbol, code in codes.items():
        print(f"{symbol}: {code}")
